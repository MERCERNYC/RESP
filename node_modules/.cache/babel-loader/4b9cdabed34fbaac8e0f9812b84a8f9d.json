{"ast":null,"code":"var _jsxFileName = \"/home/abiery/Projects/RESP/src/components/Camera.js\";\nimport React, { Component } from 'react';\nimport camera from './camera.jpg';\nexport default class Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttons: undefined\n    };\n    this.getCamera = this.getCamera.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.tryAgain = this.tryAgain.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n  }\n\n  componentDidMount() {\n    this.video = document.querySelector('.camera');\n  }\n\n  getCamera() {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      },\n      audio: false\n    }).then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n      this.setState({\n        buttons: React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.getPicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Take Picture\")\n      });\n    }).catch(err => {\n      console.error(\"Error with getting media:\", err);\n    });\n  }\n\n  tryAgain() {\n    this.video.play();\n    this.setState({\n      buttons: React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Take Picture\")\n    });\n  }\n\n  confirmPicture() {\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.drawImage(this.video, 0, 0, width, height);\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.video.srcObject.getTracks()[0].stop();\n    this.props.storePicture(dataURL);\n  }\n\n  getPicture() {\n    this.video.pause();\n    this.setState({\n      buttons: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.confirmPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Confirm Picture\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.tryAgain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Try Again\"))\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      width: \"480\",\n      height: \"480\",\n      className: \"camera\",\n      poster: camera,\n      onClick: this.getCamera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), this.state.buttons);\n  }\n\n}","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/Camera.js"],"names":["React","Component","camera","Camera","constructor","props","state","buttons","undefined","getCamera","bind","getPicture","tryAgain","confirmPicture","componentDidMount","video","document","querySelector","navigator","mediaDevices","getUserMedia","facingMode","audio","then","localMediaStream","srcObject","play","setState","catch","err","console","error","width","videoWidth","height","videoHeight","canvas","createElement","ctx","getContext","drawImage","dataURL","toDataURL","getTracks","stop","storePicture","pause","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport camera from './camera.jpg';\n\nexport default class Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttons: undefined,\n    };\n    this.getCamera = this.getCamera.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.tryAgain = this.tryAgain.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n  }\n  componentDidMount() {\n    this.video = document.querySelector('.camera');\n  }\n  getCamera() {\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n      .then(localMediaStream => {\n        this.video.srcObject = localMediaStream;\n        this.video.play();\n        this.setState({buttons : <button type=\"button\" onClick={this.getPicture}>Take Picture</button>});\n      })\n      .catch(err => {\n        console.error(`Error with getting media:`, err);\n      });\n  }\n  tryAgain() {\n    this.video.play();\n    this.setState({buttons : <button type=\"button\" onClick={this.getPicture}>Take Picture</button>});\n  }\n  confirmPicture() {\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.drawImage(this.video, 0, 0, width, height);\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.video.srcObject.getTracks()[0].stop();\n    this.props.storePicture(dataURL);\n  }\n  getPicture() {\n    this.video.pause();\n    this.setState({buttons: <div>\n                              <button type=\"button\" onClick={this.confirmPicture}>Confirm Picture</button>\n                              <button type=\"button\" onClick={this.tryAgain}>Try Again</button>\n                            </div>});\n  }\n  render() {\n    return(\n      <div>\n        <video width=\"480\" height=\"480\" className='camera' poster={camera} onClick={this.getCamera}></video>\n        <p></p>\n        {this.state.buttons}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}