{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\nexports.raw = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _loaderUtils = _interopRequireDefault(require(\"loader-utils\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction loader(content) {\n  const options = _loaderUtils.default.getOptions(this) || {};\n  (0, _schemaUtils.default)(_options.default, options, 'File Loader');\n  const context = options.context || this.rootContext;\n\n  const url = _loaderUtils.default.interpolateName(this, options.name, {\n    context,\n    content,\n    regExp: options.regExp\n  });\n\n  let outputPath = url;\n\n  if (options.outputPath) {\n    if (typeof options.outputPath === 'function') {\n      outputPath = options.outputPath(url, this.resourcePath, context);\n    } else {\n      outputPath = _path.default.posix.join(options.outputPath, url);\n    }\n  }\n\n  let publicPath = \"__webpack_public_path__ + \".concat(JSON.stringify(outputPath));\n\n  if (options.publicPath) {\n    if (typeof options.publicPath === 'function') {\n      publicPath = options.publicPath(url, this.resourcePath, context);\n    } else {\n      publicPath = \"\".concat(options.publicPath.endsWith('/') ? options.publicPath : \"\".concat(options.publicPath, \"/\")).concat(url);\n    }\n\n    publicPath = JSON.stringify(publicPath);\n  }\n\n  if (typeof options.emitFile === 'undefined' || options.emitFile) {\n    this.emitFile(outputPath, content);\n  } // TODO revert to ES2015 Module export, when new CSS Pipeline is in place\n\n\n  return \"module.exports = \".concat(publicPath, \";\");\n}\n\nconst raw = true;\nexports.raw = raw;","map":null,"metadata":{},"sourceType":"script"}