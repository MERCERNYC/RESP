{"ast":null,"code":"var _jsxFileName = \"/home/abiery/Projects/RESP/src/components/CheckIn.js\";\nimport React, { Component, Fragment } from 'react';\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport { Formik } from 'formik';\nimport camera from './camera.jpg';\nimport PersonFound from './PersonFound';\nexport default class CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner_id: undefined,\n      first: undefined,\n      last: undefined,\n      mi: undefined,\n      dob: undefined,\n      sex: undefined,\n      height: undefined,\n      weight: undefined,\n      description: undefined,\n      picture: undefined,\n      found: []\n    };\n    this.handleFill = this.handleFill.bind(this);\n    this.storePictureURI = this.storePictureURI.bind(this);\n  }\n\n  componentDidMount() {\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n  }\n\n  handleFill(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  /*\n  pictureControl(status) {\n    switch(status) {\n      case \"camera opened\":\n        return <button type=\"button\" onClick={this.getPicture}>Take Picture</button>\n      case \"picture taken\":\n        return <Fragment>\n                 <button type=\"button\" onClick={this.confirmPicture}>Confirm Picture</button>\n                 <button type=\"button\" onClick={this.getVideo}>Try Again</button>\n               </Fragment>\n      default:\n        return <img src={camera} onClick={this.getVideo}/>\n    }\n  }\n  getVideo() {\n  this.setState({picture_status : \"camera opened\"});\n  this.video = document.querySelector('.player');\n  navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n    .then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    })\n    .catch(err => {\n      console.error(`Error with getting media:`, err);\n    });\n  }\n  getPicture() {\n    this.video.pause();\n    this.video.srcObject.getTracks()[0].stop();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({picture_status : \"picture taken\"});\n  }\n  confirmPicture() {\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({picture : dataURL});\n  }\n  */\n\n\n  storePictureURI(uri) {\n    this.setState({\n      picture: uri\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"CheckIn\"), React.createElement(\"form\", {\n      id: \"checkin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"First Name:\", React.createElement(\"input\", {\n      name: \"first\",\n      type: \"text\",\n      value: this.state.first,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Last Name:\", React.createElement(\"input\", {\n      name: \"last\",\n      type: \"text\",\n      value: this.state.last,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Middle Initial:\", React.createElement(\"input\", {\n      name: \"mi\",\n      type: \"text\",\n      value: this.state.mi,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Date of Birth:\", React.createElement(\"input\", {\n      name: \"dob\",\n      type: \"text\",\n      value: this.state.dob,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Sex:\", React.createElement(\"input\", {\n      name: \"sex\",\n      type: \"text\",\n      value: this.state.sex,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Height:\", React.createElement(\"input\", {\n      name: \"height\",\n      type: \"text\",\n      value: this.state.height,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Weight:\", React.createElement(\"input\", {\n      name: \"weight\",\n      type: \"text\",\n      value: this.state.weight,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Description:\", React.createElement(\"input\", {\n      name: \"description\",\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), \"Take Picture:\", React.createElement(Camera, {\n      onClick: uri => this.storePictureURI(uri),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      picture: undefined,\n      buttons: undefined\n    };\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n  }\n\n  componentDidMount() {\n    this.canvas = document.querySelector('.picture');\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.drawImage(React.createElement(\"img\", {\n      src: \"%PUBLIC_URL%/camera.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), 0, 0);\n    this.canvas.addEventListener('click', this.getVideo);\n  }\n\n  componentDidUnmount() {\n    this.video.srcObject.getTracks()[0].stop();\n  }\n\n  getVideo() {\n    this.canvas.removeEventListener('click', this.getVideo);\n    this.video = document.createElement(\"video\");\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      },\n      audio: false\n    }).then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    }).catch(err => {\n      console.error(\"Error with getting media:\", err);\n    });\n    this.setState({\n      buttons: React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Take Picture\")\n    });\n  }\n\n  getPicture() {\n    this.video.pause();\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    this.ctx.drawImage(this.video, 0, 0, width, height);\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({\n      buttons: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.props.onClick(dataURL),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Confirm Picture\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Try Again\"))\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      className: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), this.state.buttons);\n  }\n\n}\n/*\nclass AssignLocation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient(\"resp-nqkab\");\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"sample_disaster\");\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .catch(console.error);\n  }\n\n  addFound(event) {\n    event.preventDefault();\n    this.db\n      .collection(\"found\")\n      .insertOne({\n        owner_id: this.client.auth.user.id,\n        first: this.state.first,\n        last: this.state.last,\n        mi: this.state.mi,\n        dob: this.state.dob,\n        sex: this.state.sex,\n        height: this.state.height,\n        weight: this.state.weight,\n        description: this.state.description,\n        picture: this.state.picture\n      })\n      .then(this.displayFound)\n      .catch(console.error);\n  }\n\n  render() {\n    return(\n      <h3>Assign Location</h3>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/CheckIn.js"],"names":["React","Component","Fragment","stitchClient","db","loginAnonymous","Formik","camera","PersonFound","CheckIn","constructor","props","state","owner_id","undefined","first","last","mi","dob","sex","height","weight","description","picture","found","handleFill","bind","storePictureURI","componentDidMount","client","event","target","name","value","setState","uri","render","Camera","buttons","getVideo","getPicture","canvas","document","querySelector","ctx","getContext","drawImage","addEventListener","componentDidUnmount","video","srcObject","getTracks","stop","removeEventListener","createElement","navigator","mediaDevices","getUserMedia","facingMode","audio","then","localMediaStream","play","catch","err","console","error","pause","width","videoWidth","videoHeight","style","left","offsetLeft","top","offsetTop","dataURL","toDataURL","onClick"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport { Formik } from 'formik';\nimport camera from './camera.jpg';\nimport PersonFound from './PersonFound';\n\nexport default class CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner_id: undefined,\n      first: undefined,\n      last: undefined,\n      mi: undefined,\n      dob: undefined,\n      sex: undefined,\n      height: undefined,\n      weight: undefined,\n      description: undefined,\n      picture: undefined,\n      found: [],\n    };\n    this.handleFill = this.handleFill.bind(this);\n    this.storePictureURI = this.storePictureURI.bind(this);\n  }\n\n  componentDidMount() {\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n  }\n\n  handleFill(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({ [name] : value});\n  }\n  /*\n  pictureControl(status) {\n    switch(status) {\n      case \"camera opened\":\n        return <button type=\"button\" onClick={this.getPicture}>Take Picture</button>\n      case \"picture taken\":\n        return <Fragment>\n                 <button type=\"button\" onClick={this.confirmPicture}>Confirm Picture</button>\n                 <button type=\"button\" onClick={this.getVideo}>Try Again</button>\n               </Fragment>\n      default:\n        return <img src={camera} onClick={this.getVideo}/>\n    }\n  }\n  getVideo() {\n  this.setState({picture_status : \"camera opened\"});\n  this.video = document.querySelector('.player');\n  navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n    .then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    })\n    .catch(err => {\n      console.error(`Error with getting media:`, err);\n    });\n  }\n  getPicture() {\n    this.video.pause();\n    this.video.srcObject.getTracks()[0].stop();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({picture_status : \"picture taken\"});\n  }\n  confirmPicture() {\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({picture : dataURL});\n  }\n  */\n  storePictureURI(uri) {\n    this.setState({picture: uri});\n  }\n  render() {\n    return (\n      <div>\n        <h3>CheckIn</h3>\n        <form id='checkin'>\n          <label>\n            First Name:\n             <input name=\"first\" type=\"text\" value={this.state.first} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Last Name:\n             <input name=\"last\" type=\"text\" value={this.state.last} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Middle Initial:\n             <input name=\"mi\" type=\"text\" value={this.state.mi} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Date of Birth:\n             <input name=\"dob\" type=\"text\" value={this.state.dob} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Sex:\n             <input name=\"sex\" type=\"text\" value={this.state.sex} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Height:\n             <input name=\"height\" type=\"text\" value={this.state.height} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Weight:\n             <input name=\"weight\" type=\"text\" value={this.state.weight} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Description:\n             <input name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleFill} />\n          </label>\n          <p></p>\n            Take Picture:\n            <Camera onClick={(uri) => this.storePictureURI(uri)}/>\n          <p></p>\n          <input type=\"submit\" value=\"Next\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nclass Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      picture: undefined,\n      buttons: undefined,\n    };\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n  }\n  componentDidMount() {\n    this.canvas = document.querySelector('.picture');\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.drawImage(<img src=\"%PUBLIC_URL%/camera.jpg\"/>, 0, 0);\n    this.canvas.addEventListener('click', this.getVideo);\n  }\n  componentDidUnmount() {\n    this.video.srcObject.getTracks()[0].stop();\n  }\n  getVideo() {\n    this.canvas.removeEventListener('click', this.getVideo);\n    this.video = document.createElement(\"video\");\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n      .then(localMediaStream => {\n        this.video.srcObject = localMediaStream;\n        this.video.play();\n      })\n      .catch(err => {\n        console.error(`Error with getting media:`, err);\n      });\n    this.setState({buttons : <button type=\"button\" onClick={this.getPicture}>Take Picture</button>})\n  }\n  getPicture() {\n    this.video.pause();\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    this.ctx.drawImage(this.video, 0, 0, width, height);\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({buttons: <div>\n                              <button type=\"button\" onClick={this.props.onClick(dataURL)}>Confirm Picture</button>\n                              <button type=\"button\" onClick={this.getVideo}>Try Again</button>\n                            </div>});\n  }\n  render() {\n    return(\n      <div>\n        <canvas className='picture'></canvas>\n        <p></p>\n        {this.state.buttons}\n      </div>\n    );\n  }\n}\n\n/*\nclass AssignLocation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient(\"resp-nqkab\");\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"sample_disaster\");\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .catch(console.error);\n  }\n\n  addFound(event) {\n    event.preventDefault();\n    this.db\n      .collection(\"found\")\n      .insertOne({\n        owner_id: this.client.auth.user.id,\n        first: this.state.first,\n        last: this.state.last,\n        mi: this.state.mi,\n        dob: this.state.dob,\n        sex: this.state.sex,\n        height: this.state.height,\n        weight: this.state.weight,\n        description: this.state.description,\n        picture: this.state.picture\n      })\n      .then(this.displayFound)\n      .catch(console.error);\n  }\n\n  render() {\n    return(\n      <h3>Assign Location</h3>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}