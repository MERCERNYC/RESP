{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/AddMissing.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { db } from '../stitch/database';\nimport { searchToCard } from './PersonFound';\nimport FinishSearch from './FinishSearch';\n\nconst Relation = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"(Optional) Add the searcher's relationship to the person you are searching (mother, child, friend, etc.):\", React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Relation:\", React.createElement(\"input\", {\n  type: \"text\",\n  value: props.relation,\n  onChange: props.saveRelation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: props.addMissing,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Add Entry\")));\n\nexport class Missing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state, {\n      relation: null\n    });\n    this.toNext = false;\n    this.show = false;\n    this.addMissing = this.addMissing.bind(this);\n    this.saveRelation = this.saveRelation.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  addMissing() {\n    const person = _objectSpread({}, this.state);\n\n    db.collection(\"missing\").insertOne(person).catch(console.error);\n    this.nextPage = React.createElement(Redirect, {\n      to: {\n        pathname: \"\".concat(this.props.match.path, \"/finish\"),\n        state: person\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  saveRelation(event) {\n    this.setState({\n      relation: event.target.value\n    });\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.setState(this.state);\n  }\n\n  render() {\n    const show = false;\n\n    if (this.toNext) {\n      return this.nextPage;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"This person has not yet been checked in\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), searchToCard(this.state), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Would you like to start a missing person's entry for them?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(Link, {\n      to: \"\".concat(this.props.match.path, \"/finish\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"No\")), this.show && React.createElement(Relation, {\n      relation: this.state.relation,\n      saveRelation: this.saveRelation,\n      addEntry: this.addMissing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst AddMissing = ({\n  match\n}) => React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: Missing,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/finish\"),\n  component: FinishSearch,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}));\n\nexport default AddMissing;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/AddMissing.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Redirect","Link","Switch","db","searchToCard","FinishSearch","Relation","props","relation","saveRelation","addMissing","Missing","constructor","state","location","toNext","show","bind","toggle","person","collection","insertOne","catch","console","error","nextPage","pathname","match","path","setState","event","target","value","render","AddMissing"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Link, Switch } from 'react-router-dom';\nimport { db } from '../stitch/database';\nimport { searchToCard } from './PersonFound';\nimport FinishSearch from './FinishSearch';\n\nconst Relation = (props) => (\n  <div>\n    (Optional) Add the searcher's relationship to the person you are searching (mother, child, friend, etc.):\n    <p></p>\n    <label>\n      Relation:\n      <input type=\"text\" value={props.relation} onChange={props.saveRelation}/>\n    </label>\n    <div>\n      <button onClick={props.addMissing}>Add Entry</button>\n    </div>\n  </div>\n);\n\nexport class Missing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state, relation : null};\n    this.toNext = false;\n    this.show = false;\n    this.addMissing = this.addMissing.bind(this);\n    this.saveRelation = this.saveRelation.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n  addMissing() {\n    const person = {...this.state};\n    db\n      .collection(\"missing\")\n      .insertOne(person)\n      .catch(console.error);\n    this.nextPage = <Redirect to={{pathname : `${this.props.match.path}/finish`, state : person}}/>\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  saveRelation(event) {\n    this.setState({relation : event.target.value});\n  }\n  toggle() {\n    this.show = !this.show;\n    this.setState(this.state);\n  }\n  render() {\n    const show = false;\n    if(this.toNext) {\n      return this.nextPage;\n    }\n    return(\n        <div>\n          <h2>This person has not yet been checked in</h2>\n          <p></p>\n            {searchToCard(this.state)}\n          <p></p>\n          <h3>Would you like to start a missing person's entry for them?</h3>\n          <p></p>\n          <button onClick={this.toggle}>Yes</button>\n          <Link to={`${this.props.match.path}/finish`}><button>No</button></Link>\n          {this.show && <Relation relation={this.state.relation}\n                             saveRelation={this.saveRelation}\n                             addEntry={this.addMissing}\n          />}\n        </div>\n    );\n  }\n}\n\nconst AddMissing = ({match}) => (\n      <Switch>\n        <Route exact path={`${match.path}`} component={Missing}/>\n        <Route path={`${match.path}/finish`} component={FinishSearch}/>\n      </Switch>\n);\n\nexport default AddMissing;\n"]},"metadata":{},"sourceType":"module"}