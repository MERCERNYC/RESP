{"ast":null,"code":"import _slicedToArray from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function checkInAlgorithm(person) {\n  if (person.dob) {\n    var dt = new Date();\n\n    const _dt$toISOString$slice = dt.toISOString().slice(0, 9).split('-'),\n          _dt$toISOString$slice2 = _slicedToArray(_dt$toISOString$slice, 3),\n          current_y = _dt$toISOString$slice2[0],\n          current_m = _dt$toISOString$slice2[1],\n          current_d = _dt$toISOString$slice2[2];\n\n    const _person$dob$split = person.dob.split('-'),\n          _person$dob$split2 = _slicedToArray(_person$dob$split, 3),\n          y = _person$dob$split2[0],\n          m = _person$dob$split2[1],\n          d = _person$dob$split2[2];\n\n    const greater_month = parseInt(current_m) - parseInt(m) > 0;\n    const greater_day = parseInt(current_d) - parseInt(d) > 0;\n    var person_age = greater_month && greater_day ? parseInt(current_y) - parseInt(y) : parseInt(current_y) - parseInt(y) - 1;\n  } else {\n    var person_age = null;\n  }\n\n  return {\n    $and: [{\n      first: person.first\n    }, {\n      $or: [{\n        sex: person.sex\n      }, {\n        sex: \"Undefined\"\n      }]\n    }, {\n      $or: [{\n        $and: [{\n          last: person.last\n        }, {\n          $or: [{\n            $and: [{\n              age_min: {\n                $lte: person_age\n              }\n            }, {\n              age_max: {\n                $gte: person_age\n              }\n            }]\n          }, {\n            $and: [{\n              weight_min: {\n                $lte: person.weight\n              }\n            }, {\n              weight_max: {\n                $gte: person.weight\n              }\n            }]\n          }, {\n            $and: [{\n              height_min: {\n                $lte: person.height\n              }\n            }, {\n              height_max: {\n                $gte: person.height\n              }\n            }]\n          }]\n        }]\n      }, {\n        $and: [{\n          $and: [{\n            age_min: {\n              $lte: person_age\n            }\n          }, {\n            age_max: {\n              $gte: person_age\n            }\n          }]\n        }, {\n          $or: [{\n            $and: [{\n              weight_min: {\n                $lte: person.weight\n              }\n            }, {\n              weight_max: {\n                $gte: person.weight\n              }\n            }]\n          }, {\n            $and: [{\n              height_min: {\n                $lte: person.height\n              }\n            }, {\n              height_max: {\n                $gte: person.height\n              }\n            }]\n          }]\n        }]\n      }]\n    }]\n  };\n}","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/SearchAlgorithms.js"],"names":["checkInAlgorithm","person","dob","dt","Date","toISOString","slice","split","current_y","current_m","current_d","y","m","d","greater_month","parseInt","greater_day","person_age","$and","first","$or","sex","last","age_min","$lte","age_max","$gte","weight_min","weight","weight_max","height_min","height","height_max"],"mappings":";AAAA,OAAO,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AACvC,MAAGA,MAAM,CAACC,GAAV,EAAe;AACb,QAAIC,EAAE,GAAG,IAAIC,IAAJ,EAAT;;AADa,kCAE6BD,EAAE,CAACE,WAAH,GAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BC,KAA7B,CAAmC,GAAnC,CAF7B;AAAA;AAAA,UAENC,SAFM;AAAA,UAEKC,SAFL;AAAA,UAEgBC,SAFhB;;AAAA,8BAGKT,MAAM,CAACC,GAAP,CAAWK,KAAX,CAAiB,GAAjB,CAHL;AAAA;AAAA,UAGNI,CAHM;AAAA,UAGHC,CAHG;AAAA,UAGAC,CAHA;;AAIb,UAAMC,aAAa,GAAIC,QAAQ,CAACN,SAAD,CAAR,GAAsBM,QAAQ,CAACH,CAAD,CAA/B,GAAsC,CAA5D;AACA,UAAMI,WAAW,GAAID,QAAQ,CAACL,SAAD,CAAR,GAAsBK,QAAQ,CAACF,CAAD,CAA/B,GAAsC,CAA1D;AACA,QAAII,UAAU,GAAIH,aAAa,IAAIE,WAAlB,GAAiCD,QAAQ,CAACP,SAAD,CAAR,GAAsBO,QAAQ,CAACJ,CAAD,CAA/D,GACiCI,QAAQ,CAACP,SAAD,CAAR,GAAsBO,QAAQ,CAACJ,CAAD,CAA9B,GAAoC,CADtF;AAED,GARD,MAQO;AACL,QAAIM,UAAU,GAAG,IAAjB;AACD;;AACD,SAAO;AACEC,IAAAA,IAAI,EAAG,CAAC;AAACC,MAAAA,KAAK,EAAGlB,MAAM,CAACkB;AAAhB,KAAD,EACC;AAACC,MAAAA,GAAG,EAAG,CAAC;AAACC,QAAAA,GAAG,EAAGpB,MAAM,CAACoB;AAAd,OAAD,EAAqB;AAACA,QAAAA,GAAG,EAAG;AAAP,OAArB;AAAP,KADD,EAEC;AAACD,MAAAA,GAAG,EAAG,CAAC;AAACF,QAAAA,IAAI,EAAG,CAAC;AAACI,UAAAA,IAAI,EAAErB,MAAM,CAACqB;AAAd,SAAD,EACC;AAACF,UAAAA,GAAG,EAAG,CAAC;AAACF,YAAAA,IAAI,EAAG,CAAC;AAACK,cAAAA,OAAO,EAAG;AAACC,gBAAAA,IAAI,EAAGP;AAAR;AAAX,aAAD,EAAkC;AAACQ,cAAAA,OAAO,EAAG;AAACC,gBAAAA,IAAI,EAAGT;AAAR;AAAX,aAAlC;AAAR,WAAD,EACC;AAACC,YAAAA,IAAI,EAAG,CAAC;AAACS,cAAAA,UAAU,EAAG;AAACH,gBAAAA,IAAI,EAAGvB,MAAM,CAAC2B;AAAf;AAAd,aAAD,EAAwC;AAACC,cAAAA,UAAU,EAAG;AAACH,gBAAAA,IAAI,EAAGzB,MAAM,CAAC2B;AAAf;AAAd,aAAxC;AAAR,WADD,EAEC;AAACV,YAAAA,IAAI,EAAG,CAAC;AAACY,cAAAA,UAAU,EAAG;AAACN,gBAAAA,IAAI,EAAGvB,MAAM,CAAC8B;AAAf;AAAd,aAAD,EAAwC;AAACC,cAAAA,UAAU,EAAG;AAACN,gBAAAA,IAAI,EAAGzB,MAAM,CAAC8B;AAAf;AAAd,aAAxC;AAAR,WAFD;AAAP,SADD;AAAR,OAAD,EAIC;AAACb,QAAAA,IAAI,EAAG,CAAC;AAACA,UAAAA,IAAI,EAAG,CAAC;AAACK,YAAAA,OAAO,EAAG;AAACC,cAAAA,IAAI,EAAGP;AAAR;AAAX,WAAD,EAAkC;AAACQ,YAAAA,OAAO,EAAG;AAACC,cAAAA,IAAI,EAAGT;AAAR;AAAX,WAAlC;AAAR,SAAD,EACC;AAACG,UAAAA,GAAG,EAAG,CAAC;AAACF,YAAAA,IAAI,EAAG,CAAC;AAACS,cAAAA,UAAU,EAAG;AAACH,gBAAAA,IAAI,EAAGvB,MAAM,CAAC2B;AAAf;AAAd,aAAD,EAAwC;AAACC,cAAAA,UAAU,EAAG;AAACH,gBAAAA,IAAI,EAAGzB,MAAM,CAAC2B;AAAf;AAAd,aAAxC;AAAR,WAAD,EACC;AAACV,YAAAA,IAAI,EAAG,CAAC;AAACY,cAAAA,UAAU,EAAG;AAACN,gBAAAA,IAAI,EAAGvB,MAAM,CAAC8B;AAAf;AAAd,aAAD,EAAwC;AAACC,cAAAA,UAAU,EAAG;AAACN,gBAAAA,IAAI,EAAGzB,MAAM,CAAC8B;AAAf;AAAd,aAAxC;AAAR,WADD;AAAP,SADD;AAAR,OAJD;AAAP,KAFD;AADT,GAAP;AAYD","sourcesContent":["export function checkInAlgorithm(person) {\n  if(person.dob) {\n    var dt = new Date();\n    const [current_y, current_m, current_d] = dt.toISOString().slice(0, 9).split('-');\n    const [y, m, d] = person.dob.split('-');\n    const greater_month = (parseInt(current_m) - parseInt(m)) > 0;\n    const greater_day = (parseInt(current_d) - parseInt(d)) > 0;\n    var person_age = (greater_month && greater_day) ? parseInt(current_y) - parseInt(y)\n                                                    : parseInt(current_y) - parseInt(y) - 1;\n  } else {\n    var person_age = null;\n  }\n  return {\n           $and : [{first : person.first},\n                   {$or : [{sex : person.sex}, {sex : \"Undefined\"}]},\n                   {$or : [{$and : [{last: person.last},\n                                    {$or : [{$and : [{age_min : {$lte : person_age}}, {age_max : {$gte : person_age}}]},\n                                            {$and : [{weight_min : {$lte : person.weight}}, {weight_max : {$gte : person.weight}}]},\n                                            {$and : [{height_min : {$lte : person.height}}, {height_max : {$gte : person.height}}]}] }]},\n                           {$and : [{$and : [{age_min : {$lte : person_age}}, {age_max : {$gte : person_age}}]},\n                                    {$or : [{$and : [{weight_min : {$lte : person.weight}}, {weight_max : {$gte : person.weight}}]},\n                                            {$and : [{height_min : {$lte : person.height}}, {height_max : {$gte : person.height}}]}] }] }] }\n           ]\n         }\n}\n"]},"metadata":{},"sourceType":"module"}