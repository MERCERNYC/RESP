{"ast":null,"code":"var _jsxFileName = \"/home/abiery/Projects/RESP/src/components/Loading.js\";\nimport React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport PersonFound from './PersonFound';\nimport AssignLocation from './AssignLocation';\nexport default class Loading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner_id: this.props.owner_id,\n      first: this.props.first,\n      last: this.props.last,\n      mi: this.props.mi,\n      dob: this.props.dob,\n      sex: this.props.sex,\n      height: this.props.height,\n      weight: this.props.weight,\n      description: this.props.description,\n      picture: this.props.picture,\n      found: []\n    };\n    this.anyMatches = this.anyMatches.bind(this);\n  }\n\n  componentDidMount() {\n    this.load = true;\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n    this.anyMatches();\n  }\n\n  async anyMatches() {\n    this.moveOn = true;\n    var matches = [];\n    console.log('matching...');\n    await this.db.collection('missing').find({\n      first: this.props.first\n    }, {\n      limit: 20\n    }).toArray().then(people => {\n      people.forEach(person => matches.push(person));\n    }).catch(err => console.error(\"Failed to find documents: \".concat(err)));\n    this.setState({\n      found: matches\n    });\n    this.load = false;\n    this.personFound = !(this.state.found.length === 0);\n  }\n\n  render() {\n    return this.personFound ? React.createElement(PersonFound, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })) : React.createElement(AssignLocation, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/Loading.js"],"names":["React","Component","stitchClient","db","loginAnonymous","BrowserRouter","Router","Route","Link","Redirect","PersonFound","AssignLocation","Loading","constructor","props","state","owner_id","first","last","mi","dob","sex","height","weight","description","picture","found","anyMatches","bind","componentDidMount","load","client","moveOn","matches","console","log","collection","find","limit","toArray","then","people","forEach","person","push","catch","err","error","setState","personFound","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,EAAvB,QAAiC,oBAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,QAA9C,QAA6D,kBAA7D;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAC7CY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADV;AAEXC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFP;AAGXC,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAHN;AAIXC,MAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWK,EAJJ;AAKXC,MAAAA,GAAG,EAAE,KAAKN,KAAL,CAAWM,GALL;AAMXC,MAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GANL;AAOXC,MAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAPR;AAQXC,MAAAA,MAAM,EAAE,KAAKT,KAAL,CAAWS,MARR;AASXC,MAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWU,WATb;AAUXC,MAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWW,OAVT;AAWXC,MAAAA,KAAK,EAAE;AAXI,KAAb;AAaA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,MAAL,GAAc7B,YAAd;AACA,SAAKC,EAAL,GAAUA,EAAV;AACAC,IAAAA,cAAc;AACd,SAAKuB,UAAL;AACD;;AAED,QAAMA,UAAN,GAAmB;AACjB,SAAKK,MAAL,GAAc,IAAd;AACA,QAAIC,OAAO,GAAG,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAM,KAAKhC,EAAL,CAAQiC,UAAR,CAAmB,SAAnB,EACHC,IADG,CACE;AAACpB,MAAAA,KAAK,EAAG,KAAKH,KAAL,CAAWG;AAApB,KADF,EAC8B;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAD9B,EAEHC,OAFG,GAGHC,IAHG,CAGEC,MAAM,IAAI;AACdA,MAAAA,MAAM,CAACC,OAAP,CAAeC,MAAM,IAAIV,OAAO,CAACW,IAAR,CAAaD,MAAb,CAAzB;AACD,KALG,EAMHE,KANG,CAMGC,GAAG,IAAIZ,OAAO,CAACa,KAAR,qCAA2CD,GAA3C,EANV,CAAN;AAOA,SAAKE,QAAL,CAAc;AAACtB,MAAAA,KAAK,EAAGO;AAAT,KAAd;AACA,SAAKH,IAAL,GAAY,KAAZ;AACA,SAAKmB,WAAL,GAAmB,EAAE,KAAKlC,KAAL,CAAWW,KAAX,CAAiBwB,MAAjB,KAA4B,CAA9B,CAAnB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,KAAKF,WAAL,GAAmB,oBAAC,WAAD,oBAAiB,KAAKlC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnB,GAAqD,oBAAC,cAAD,oBAAoB,KAAKA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADvD;AAGD;;AA9C4C","sourcesContent":["import React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport {BrowserRouter as Router, Route, Link, Redirect} from 'react-router-dom';\nimport PersonFound from './PersonFound';\nimport AssignLocation from './AssignLocation';\n\nexport default class Loading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner_id: this.props.owner_id,\n      first: this.props.first,\n      last: this.props.last,\n      mi: this.props.mi,\n      dob: this.props.dob,\n      sex: this.props.sex,\n      height: this.props.height,\n      weight: this.props.weight,\n      description: this.props.description,\n      picture: this.props.picture,\n      found: []\n    };\n    this.anyMatches = this.anyMatches.bind(this);\n  }\n  componentDidMount() {\n    this.load = true;\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n    this.anyMatches();\n  }\n\n  async anyMatches() {\n    this.moveOn = true;\n    var matches = [];\n    console.log('matching...');\n    await this.db.collection('missing')\n      .find({first : this.props.first}, { limit: 20 })\n      .toArray()\n      .then(people => {\n        people.forEach(person => matches.push(person));\n      })\n      .catch(err => console.error(`Failed to find documents: ${err}`));\n    this.setState({found : matches});\n    this.load = false;\n    this.personFound = !(this.state.found.length === 0);\n  }\n\n  render() {\n    return(\n      this.personFound ? <PersonFound {...this.state} /> : <AssignLocation {...this.state}/>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}