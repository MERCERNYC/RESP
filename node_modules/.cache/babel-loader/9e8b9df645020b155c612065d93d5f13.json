{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/PersonFound.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Card, CardImg, CardBody, CardText } from 'reactstrap';\nimport AssignLocation from './AssignLocation';\nexport function searchToCard(person, cardSelect) {\n  const cardAttributes = [\"Name: \".concat(person.first, \" \").concat(person.last), \"Sex: \".concat(person.sex), (person.age_min || person.age_max) && \"Age: \".concat(person.age_min, \"-\").concat(person.age_max, \" yrs\"), (person.height_min || person.height_max) && \"Height: \".concat(person.height_min, \"-\").concat(person.height_max, \" cm\"), (person.weight_min || person.weight_max) && \"Weight: \".concat(person.weight_min, \"-\").concat(person.weight_max, \" kg\"), person.description && \"Description : \".concat(person.description), person.looked_for_by && \"Looked for By: \".concat(person.looked_for_by)];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: () => cardSelect(person),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"320\",\n    height: \"240\",\n    src: person.picture,\n    alt: \"No picture available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, cardAttributes.map(attribute => React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, attribute)))));\n}\nexport function personToCard(person, cardSelect) {\n  const cardAttributes = [\"Name: \".concat(person.first, \" \").concat(person.last), \"Sex: \".concat(person.sex), person.dob && \"Date of Birth: \".concat(person.dob), person.height && \"Height: \".concat(person.height, \" cm\"), person.weight && \"Weight: \".concat(person.weight, \" kg\"), person.description && \"Description : \".concat(person.description), person.campsite && \"Currently assigned to : Campsite \".concat(person.campsite)];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: () => cardSelect(person),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"320\",\n    height: \"240\",\n    src: person.picture,\n    alt: \"No picture available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, cardAttributes.map(attribute => React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, attribute)))));\n}\nexport class DisplayFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state);\n    this.toNext = false;\n    this.cardSelect = this.cardSelect.bind(this);\n    this.reunite = this.reunite.bind(this);\n    this.noMatch = this.noMatch.bind(this);\n  }\n\n  cardSelect(person) {\n    this.looked_for_by = person.looked_for_by;\n    this.looked_for_by_id = person.looked_for_by_id;\n    this.relation = person.relation;\n  }\n\n  async reunite() {\n    const searcher = await db.collection('found').findOne({\n      _id: ObjectId(this.looked_for_by_id)\n    }, {\n      campsite: true,\n      picture: true\n    }).catch(err => console.error(\"Failed to find documents: \".concat(err)));\n    this.campsite = searcher.campsite;\n    this.picture = searcher.picture;\n    this.info = _objectSpread({}, this.state, {\n      reunite: true,\n      looked_for_by: this.looked_for_by,\n      relation: this.relation,\n      campsite: searcher.campsite,\n      picture: searcher.picture\n    });\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  noMatch() {\n    this.info = this.state;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  render() {\n    const message = this.state.found.length > 1 ? \"\".concat(this.state.found.length, \" potential matches found!\") : '1 Potential Match Found!';\n\n    if (this.toNext) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: \"\".concat(this.props.match.path, \"/assign-location\"),\n          state: this.info\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.found.map(person => searchToCard(person, this.cardSelect)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"Does the checked-in person match the selected profile?\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.reunite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(\"button\", {\n      onClick: this.noMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"No\"));\n  }\n\n}\n\nconst PersonFound = ({\n  match\n}) => React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: DisplayFound,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/assign-location\"),\n  component: AssignLocation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}));\n\nexport default PersonFound;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/PersonFound.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","Card","CardImg","CardBody","CardText","AssignLocation","searchToCard","person","cardSelect","cardAttributes","first","last","sex","age_min","age_max","height_min","height_max","weight_min","weight_max","description","looked_for_by","picture","map","attribute","personToCard","dob","height","weight","campsite","DisplayFound","constructor","props","state","location","toNext","bind","reunite","noMatch","looked_for_by_id","relation","searcher","db","collection","findOne","_id","ObjectId","catch","err","console","error","info","setState","render","message","found","length","pathname","match","path","PersonFound"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport {Card, CardImg, CardBody, CardText} from 'reactstrap';\nimport AssignLocation from './AssignLocation';\n\nexport function searchToCard(person, cardSelect) {\n  const cardAttributes = [`Name: ${person.first} ${person.last}`,\n                          `Sex: ${person.sex}`,\n                          (person.age_min || person.age_max) && `Age: ${person.age_min}-${person.age_max} yrs`,\n                          (person.height_min || person.height_max) && `Height: ${person.height_min}-${person.height_max} cm`,\n                          (person.weight_min || person.weight_max) && `Weight: ${person.weight_min}-${person.weight_max} kg`,\n                          person.description && `Description : ${person.description}`,\n                          person.looked_for_by && `Looked for By: ${person.looked_for_by}`];\n  return (\n    <div>\n      <Card onClick={() => cardSelect(person)}>\n        <CardImg width=\"320\" height=\"240\" src={person.picture} alt=\"No picture available\"/>\n        <CardBody>\n          {cardAttributes.map(attribute => <CardText>{attribute}</CardText>)}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport function personToCard(person, cardSelect) {\n  const cardAttributes = [`Name: ${person.first} ${person.last}`,\n                          `Sex: ${person.sex}`,\n                          person.dob && `Date of Birth: ${person.dob}`,\n                          person.height && `Height: ${person.height} cm`,\n                          person.weight && `Weight: ${person.weight} kg`,\n                          person.description && `Description : ${person.description}`,\n                          person.campsite && `Currently assigned to : Campsite ${person.campsite}`];\n  return (\n    <div>\n      <Card onClick={() => cardSelect(person)}>\n        <CardImg width=\"320\" height=\"240\" src={person.picture} alt=\"No picture available\"/>\n        <CardBody>\n          {cardAttributes.map(attribute => <CardText>{attribute}</CardText>)}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport class DisplayFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state};\n    this.toNext = false;\n    this.cardSelect = this.cardSelect.bind(this);\n    this.reunite = this.reunite.bind(this);\n    this.noMatch = this.noMatch.bind(this);\n  }\n  cardSelect(person) {\n    this.looked_for_by = person.looked_for_by;\n    this.looked_for_by_id = person.looked_for_by_id;\n    this.relation = person.relation;\n  }\n  async reunite() {\n    const searcher = await db\n      .collection('found')\n      .findOne({_id : ObjectId(this.looked_for_by_id)}, {campsite : true, picture: true})\n      .catch(err => console.error(`Failed to find documents: ${err}`));\n    this.campsite = searcher.campsite;\n    this.picture = searcher.picture;\n    this.info = {...this.state,\n                 reunite : true,\n                 looked_for_by: this.looked_for_by,\n                 relation: this.relation,\n                 campsite: searcher.campsite,\n                 picture: searcher.picture};\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  noMatch() {\n    this.info = this.state;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  render() {\n    const message = this.state.found.length > 1 ? `${this.state.found.length} potential matches found!`\n                                                : '1 Potential Match Found!';\n    if(this.toNext) {\n      return <Redirect push to={{pathname: `${this.props.match.path}/assign-location`, state : this.info}}/>;\n    }\n    return(\n      <div>\n        <h3>{message}</h3>\n        <p></p>\n        {this.state.found.map((person) => searchToCard(person, this.cardSelect))}\n        <p></p>\n        Does the checked-in person match the selected profile?\n        <p></p>\n        <button onClick={this.reunite}>Yes</button><button onClick={this.noMatch}>No</button>\n      </div>\n    );\n  }\n}\n\nconst PersonFound = ({match}) => (\n      <Router>\n        <Route exact path={`${match.path}`} component={DisplayFound} />\n        <Route path={`${match.path}/assign-location`} component={AssignLocation} />\n      </Router>\n    );\n\nexport default PersonFound;\n"]},"metadata":{},"sourceType":"module"}