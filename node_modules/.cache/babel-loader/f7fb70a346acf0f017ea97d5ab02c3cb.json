{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/AssignLocation.js\";\nimport React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { personToCard } from './PersonFound';\nimport { CheckInForm } from './CheckIn';\nimport FinishCheckIn from './FinishCheckIn';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, Field } from 'react-final-form';\nimport campsites from './campsites.json';\n\nfunction campsiteToButton(campsite) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"campsite\",\n    component: \"input\",\n    type: \"radio\",\n    value: campsite.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), ' ', \"Campsite \", campsite.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nexport class AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state);\n    this.modal = false;\n    this.toNext = false;\n  }\n\n  componentDidMount() {\n    this.person = _objectSpread({}, this.state);\n  }\n\n  render() {\n    const onSubmit = values => {\n      this.person = _objectSpread({}, this.person, {\n        campsite: values.campsite\n      });\n      delete this.person.found;\n      delete this.person.reunite;\n      delete this.person.looked_for_by;\n      delete this.person.relation;\n      delete this.looked_for_campsite;\n      delete this.looked_for_picture;\n      toggle();\n    };\n\n    const toggle = () => {\n      this.modal = !this.modal;\n      this.setState(this.state);\n    };\n\n    const addFound = () => {\n      db.collection(\"found\").insertOne(this.person).then(result => {\n        var id = result.insertedId.toHexString();\n        this.nextPage = React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: \"\".concat(this.props.match.url, \"/finish\"),\n            state: _objectSpread({}, this.person, {\n              id: id\n            })\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n        this.toNext = true;\n        this.setState(this.state);\n      }).catch(console.error);\n    };\n\n    const toRefill = () => {\n      this.nextPage = React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: '/check-in',\n          state: _objectSpread({}, this.person)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n      this.toNext = true;\n      this.setState(this.state);\n    };\n\n    const header = this.state.reunite ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Reuniting \", this.state.first, \" with \", this.state.looked_for_by, \" (\", this.state.relation, \")\") : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Assign Location\");\n    const images = {};\n\n    if (this.toNext) {\n      return this.nextPage;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, header), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: onSubmit,\n      initialValues: {\n        campsite: this.state.looked_for_campsite\n      },\n      render: ({\n        handleSubmit,\n        form,\n        values\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, campsites.campsites.map(campsiteToButton)), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Finish\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      isOpen: this.modal,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Is this information correct?\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, personToCard(_objectSpread({}, this.person))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: addFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Yes\"), ' ', React.createElement(\"button\", {\n      onClick: toRefill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"No\"))));\n  }\n\n}\n\nconst AssignLocation = ({\n  match\n}) => React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: AssignCamp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/finish\"),\n  component: FinishCheckIn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/check-in\",\n  component: CheckInForm,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}));\n\nexport default AssignLocation;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/AssignLocation.js"],"names":["React","Component","stitchClient","db","personToCard","CheckInForm","FinishCheckIn","BrowserRouter","Router","Route","Redirect","Switch","Modal","ModalHeader","ModalBody","ModalFooter","Form","Field","campsites","campsiteToButton","campsite","name","AssignCamp","constructor","props","state","location","modal","toNext","componentDidMount","person","render","onSubmit","values","found","reunite","looked_for_by","relation","looked_for_campsite","looked_for_picture","toggle","setState","addFound","collection","insertOne","then","result","id","insertedId","toHexString","nextPage","pathname","match","url","catch","console","error","toRefill","header","first","images","handleSubmit","form","map","AssignLocation","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { personToCard } from './PersonFound';\nimport {CheckInForm} from './CheckIn';\nimport FinishCheckIn from './FinishCheckIn';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, Field } from 'react-final-form';\nimport campsites from './campsites.json'\n\nfunction campsiteToButton(campsite) {\n  return (<div>\n            <label>\n            <Field\n              name=\"campsite\"\n              component=\"input\"\n              type=\"radio\"\n              value={campsite.name}\n              />{' '}\n              Campsite {campsite.name}\n            </label>\n            <p></p>\n          </div>);\n}\n\nexport class AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state};\n    this.modal = false;\n    this.toNext = false;\n  }\n  componentDidMount() {\n    this.person = {...this.state};\n  }\n  render() {\n    const onSubmit = (values) => {\n      this.person = {...this.person, campsite : values.campsite}\n      delete this.person.found;\n      delete this.person.reunite;\n      delete this.person.looked_for_by;\n      delete this.person.relation;\n      delete this.looked_for_campsite;\n      delete this.looked_for_picture;\n      toggle();\n    };\n    const toggle = () => {\n      this.modal = !this.modal;\n      this.setState(this.state);\n    };\n    const addFound = () => {\n      db\n        .collection(\"found\")\n        .insertOne(this.person)\n        .then(result => {\n          var id = result.insertedId.toHexString();\n          this.nextPage = <Redirect push to={{pathname: `${this.props.match.url}/finish`, state: {...this.person, id: id}}}/>;\n          this.toNext = true;\n          this.setState(this.state);\n        })\n        .catch(console.error);\n    }\n    const toRefill = () => {\n      this.nextPage = <Redirect push to={{pathname: '/check-in', state: {...this.person}}}/>;\n      this.toNext = true;\n      this.setState(this.state);\n    };\n    const header = this.state.reunite ? <h3>Reuniting {this.state.first} with {this.state.looked_for_by} ({this.state.relation})</h3>\n                                      : <h3>Assign Location</h3>\n    const images = {}\n    if(this.toNext) {\n      return this.nextPage;\n    }\n    return(\n      <div>\n      <h3>{header}</h3>\n      <div>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{campsite : this.state.looked_for_campsite}}\n        render={({ handleSubmit, form, values }) => (\n        <form onSubmit={handleSubmit}>\n          <div>\n            {campsites.campsites.map(campsiteToButton)}\n          </div>\n          <div className=\"buttons\">\n              <button type=\"submit\">\n                Finish\n              </button>\n            </div>\n        </form>\n        )}/>\n      </div>\n        <Modal isOpen={this.modal} toggle={toggle}>\n          <ModalHeader>Is this information correct?</ModalHeader>\n          <ModalBody>{personToCard({...this.person})}</ModalBody>\n          <ModalFooter><button onClick={addFound}>Yes</button>{' '}<button onClick={toRefill}>No</button></ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst AssignLocation = ({match}) => (\n      <Switch>\n        <Route exact path={`${match.path}`} component={AssignCamp} />\n        <Route path={`${match.path}/finish`} component={FinishCheckIn} />\n        <Route path='/check-in' component={CheckInForm} />\n      </Switch>\n  );\n\nexport default AssignLocation;\n"]},"metadata":{},"sourceType":"module"}