{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/AssignLocation.js\";\nimport React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport Camera from './Camera';\nimport FinishCheckIn from './FinishCheckIn';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Modal } from 'reactstrap';\n\nclass AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state, {\n      toNext: false\n    });\n    this.assign = this.assign.bind(this);\n    this.addFound = this.addFound.bind(this);\n  }\n\n  assign(campsite) {\n    this.person = _objectSpread({}, this.state, {\n      campsite: campsite\n    });\n    delete this.person.found;\n    delete this.person.toNext;\n    this.setState({\n      toNext: true\n    });\n  }\n\n  addFound() {\n    const person = _objectSpread({}, this.state);\n\n    db.collection(\"found\").insertOne(person).catch(console.error);\n    alert('Check-in Successful! Redirecting home');\n    this.nextPage = React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  render() {\n    if (this.state.toNext) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: \"\".concat(this.props.match.url, \"/finish\"),\n          state: _objectSpread({}, this.person)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Assign Location\"), React.createElement(\"button\", {\n      onClick: () => this.assign('A'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Campsite A\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.assign('B'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Campsite B\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.assign('C'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Campsite C\"));\n  }\n\n}\n\nconst AssignLocation = ({\n  match\n}) => React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: AssignCamp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/finish\"),\n  component: FinishCheckIn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}));\n\nexport default AssignLocation;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/AssignLocation.js"],"names":["React","Component","stitchClient","db","loginAnonymous","Camera","FinishCheckIn","BrowserRouter","Router","Route","Redirect","Switch","Modal","AssignCamp","constructor","props","state","location","toNext","assign","bind","addFound","campsite","person","found","setState","collection","insertOne","catch","console","error","alert","nextPage","render","pathname","match","url","AssignLocation","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport Camera from './Camera';\nimport FinishCheckIn from './FinishCheckIn';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Modal } from 'reactstrap';\n\nclass AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state, toNext: false};\n    this.assign = this.assign.bind(this);\n    this.addFound = this.addFound.bind(this);\n  }\n  assign(campsite) {\n    this.person = {...this.state, campsite : campsite};\n    delete this.person.found;\n    delete this.person.toNext;\n    this.setState({toNext : true});\n  }\n  addFound() {\n    const person = {...this.state};\n    db\n      .collection(\"found\")\n      .insertOne(person)\n      .catch(console.error);\n    alert('Check-in Successful! Redirecting home');\n    this.nextPage = <Redirect push to='/'/>;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  render() {\n    if(this.state.toNext) {\n      return <Redirect push to={{pathname: `${this.props.match.url}/finish`, state: {...this.person}}}/>\n    }\n    return(\n      <div>\n      <h3>Assign Location</h3>\n        <button onClick={() => this.assign('A')}>Campsite A</button>\n        <p></p>\n        <button onClick={() => this.assign('B')}>Campsite B</button>\n        <p></p>\n        <button onClick={() => this.assign('C')}>Campsite C</button>\n      </div>\n    );\n  }\n}\n\nconst AssignLocation = ({match}) => (\n      <Router>\n        <Route exact path={`${match.path}`} component={AssignCamp} />\n        <Route path={`${match.path}/finish`} component={FinishCheckIn} />\n      </Router>\n    );\n\nexport default AssignLocation;\n"]},"metadata":{},"sourceType":"module"}