{"ast":null,"code":"var _jsxFileName = \"/home/abiery/Projects/RESP/src/components/CheckIn.js\";\nimport React, { Component, Fragment } from 'react';\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport camera from './camera.jpg';\nimport { Formik } from 'formik';\nimport PersonFound from './PersonFound';\nexport default class CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      picture_status: undefined,\n      info: {\n        owner_id: undefined,\n        first: undefined,\n        last: undefined,\n        mi: undefined,\n        dob: undefined,\n        sex: undefined,\n        height: undefined,\n        weight: undefined,\n        description: undefined,\n        picture: undefined\n      }\n    };\n    this.handleFill = this.handleFill.bind(this);\n    this.pictureControl = this.pictureControl.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n    this.whatsNext = this.whatsNext.bind(this);\n  }\n\n  componentDidMount() {\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n  }\n\n  handleFill(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  pictureControl(status) {\n    switch (status) {\n      case \"camera opened\":\n        return React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.getPicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Take Picture\");\n\n      case \"picture taken\":\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.confirmPicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Confirm Picture\"), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.getVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Try Again\"));\n\n      default:\n        return React.createElement(\"img\", {\n          src: camera,\n          onClick: this.getVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n    }\n  }\n\n  getVideo() {\n    this.setState({\n      picture_status: \"camera opened\"\n    });\n    this.video = document.querySelector('.player');\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      },\n      audio: false\n    }).then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    }).catch(err => {\n      console.error(\"Error with getting media:\", err);\n    });\n  }\n\n  getPicture() {\n    this.video.pause();\n    this.video.srcObject.getTracks()[0].stop();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({\n      picture_status: \"picture taken\"\n    });\n  }\n\n  confirmPicture() {\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({\n      picture: dataURL\n    });\n  }\n\n  whatsNext() {\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"CheckIn\"), React.createElement(\"form\", {\n      id: \"checkin\",\n      onSubmit: this.whatsNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"First Name:\", React.createElement(\"input\", {\n      name: \"first\",\n      type: \"text\",\n      value: this.state.info.first,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Last Name:\", React.createElement(\"input\", {\n      name: \"last\",\n      type: \"text\",\n      value: this.state.info.last,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Middle Initial:\", React.createElement(\"input\", {\n      name: \"mi\",\n      type: \"text\",\n      value: this.state.info.mi,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Date of Birth:\", React.createElement(\"input\", {\n      name: \"dob\",\n      type: \"text\",\n      value: this.state.info.dob,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Sex:\", React.createElement(\"input\", {\n      name: \"sex\",\n      type: \"text\",\n      value: this.state.info.sex,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Height:\", React.createElement(\"input\", {\n      name: \"height\",\n      type: \"text\",\n      value: this.state.info.height,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Weight:\", React.createElement(\"input\", {\n      name: \"weight\",\n      type: \"text\",\n      value: this.state.info.weight,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Description:\", React.createElement(\"input\", {\n      name: \"description\",\n      type: \"text\",\n      value: this.state.info.description,\n      onChange: this.handleFill,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), \"Take Picture:\", React.createElement(Camera, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvas_element: React.createElement(\"img\", {\n        src: camera,\n        onClick: this.getVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }),\n      buttons: undefined\n    };\n    this.canvas = document.querySelector('.picture');\n    this.pictureControl = this.pictureControl.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n  }\n\n  pictureControl(status) {\n    switch (status) {\n      case \"camera opened\":\n        return;\n\n      case \"picture taken\":\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.confirmPicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Confirm Picture\"), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.getVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"Try Again\"));\n    }\n  }\n\n  getVideo() {\n    this.video = document.createElement(\"video\");\n    this.setState({\n      canvas_element: this.video\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      },\n      audio: false\n    }).then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    }).catch(err => {\n      console.error(\"Error with getting media:\", err);\n    });\n    this.setState({\n      buttons: React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Take Picture\")\n    });\n  }\n\n  getPicture() {\n    this.video.pause();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({\n      picture_status: \"picture taken\"\n    });\n  }\n\n  confirmPicture() {\n    this.video.srcObject.getTracks()[0].stop();\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({\n      picture: dataURL\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      class: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.state.canvas_element), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), this.state.buttons);\n  }\n\n}\n/*\nclass AssignLocation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient(\"resp-nqkab\");\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"sample_disaster\");\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .catch(console.error);\n  }\n\n  addFound(event) {\n    event.preventDefault();\n    this.db\n      .collection(\"found\")\n      .insertOne({\n        owner_id: this.client.auth.user.id,\n        first: this.state.info.first,\n        last: this.state.info.last,\n        mi: this.state.info.mi,\n        dob: this.state.info.dob,\n        sex: this.state.info.sex,\n        height: this.state.info.height,\n        weight: this.state.info.weight,\n        description: this.state.info.description,\n        picture: this.state.info.picture\n      })\n      .then(this.displayFound)\n      .catch(console.error);\n  }\n\n  render() {\n    return(\n      <h3>Assign Location</h3>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/CheckIn.js"],"names":["React","Component","Fragment","stitchClient","db","loginAnonymous","camera","Formik","PersonFound","CheckIn","constructor","props","state","picture_status","undefined","info","owner_id","first","last","mi","dob","sex","height","weight","description","picture","handleFill","bind","pictureControl","getVideo","getPicture","confirmPicture","whatsNext","componentDidMount","client","event","target","name","value","setState","status","video","document","querySelector","navigator","mediaDevices","getUserMedia","facingMode","audio","then","localMediaStream","srcObject","play","catch","err","console","error","pause","getTracks","stop","canvas","createElement","width","videoWidth","videoHeight","style","left","offsetLeft","top","offsetTop","ctx","getContext","drawImage","dataURL","toDataURL","render","Camera","canvas_element","buttons"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { stitchClient, db } from '../stitch/database';\nimport { loginAnonymous } from '../stitch/auth';\nimport camera from './camera.jpg';\nimport { Formik } from 'formik';\n\nimport PersonFound from './PersonFound';\n\nexport default class CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      picture_status: undefined,\n      info: {\n        owner_id: undefined,\n        first: undefined,\n        last: undefined,\n        mi: undefined,\n        dob: undefined,\n        sex: undefined,\n        height: undefined,\n        weight: undefined,\n        description: undefined,\n        picture: undefined,\n      }\n    };\n    this.handleFill = this.handleFill.bind(this);\n    this.pictureControl = this.pictureControl.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n    this.whatsNext = this.whatsNext.bind(this);\n  }\n\n  componentDidMount() {\n    this.client = stitchClient;\n    this.db = db;\n    loginAnonymous();\n  }\n\n  handleFill(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({ [name] : value});\n  }\n\n  pictureControl(status) {\n    switch(status) {\n      case \"camera opened\":\n        return <button type=\"button\" onClick={this.getPicture}>Take Picture</button>\n      case \"picture taken\":\n        return <Fragment>\n                 <button type=\"button\" onClick={this.confirmPicture}>Confirm Picture</button>\n                 <button type=\"button\" onClick={this.getVideo}>Try Again</button>\n               </Fragment>\n      default:\n        return <img src={camera} onClick={this.getVideo}/>\n    }\n  }\n  getVideo() {\n  this.setState({picture_status : \"camera opened\"});\n  this.video = document.querySelector('.player');\n  navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n    .then(localMediaStream => {\n      this.video.srcObject = localMediaStream;\n      this.video.play();\n    })\n    .catch(err => {\n      console.error(`Error with getting media:`, err);\n    });\n  }\n  getPicture() {\n    this.video.pause();\n    this.video.srcObject.getTracks()[0].stop();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({picture_status : \"picture taken\"});\n  }\n  confirmPicture() {\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({picture : dataURL});\n  }\n  whatsNext() {\n    return true\n  }\n  render() {\n    return (\n      <div>\n        <h3>CheckIn</h3>\n        <form id='checkin' onSubmit={this.whatsNext}>\n          <label>\n            First Name:\n             <input name=\"first\" type=\"text\" value={this.state.info.first} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Last Name:\n             <input name=\"last\" type=\"text\" value={this.state.info.last} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Middle Initial:\n             <input name=\"mi\" type=\"text\" value={this.state.info.mi} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Date of Birth:\n             <input name=\"dob\" type=\"text\" value={this.state.info.dob} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Sex:\n             <input name=\"sex\" type=\"text\" value={this.state.info.sex} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Height:\n             <input name=\"height\" type=\"text\" value={this.state.info.height} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Weight:\n             <input name=\"weight\" type=\"text\" value={this.state.info.weight} onChange={this.handleFill} />\n          </label>\n          <p></p>\n          <label>\n            Description:\n             <input name=\"description\" type=\"text\" value={this.state.info.description} onChange={this.handleFill} />\n          </label>\n          <p></p>\n            Take Picture:\n            <Camera/>\n          <p></p>\n          <input type=\"submit\" value=\"Next\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nclass Camera extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvas_element: <img src={camera} onClick={this.getVideo}/>,\n      buttons: undefined,\n    };\n    this.canvas = document.querySelector('.picture');\n    this.pictureControl = this.pictureControl.bind(this);\n    this.getVideo = this.getVideo.bind(this);\n    this.getPicture = this.getPicture.bind(this);\n    this.confirmPicture = this.confirmPicture.bind(this);\n  }\n  pictureControl(status) {\n    switch(status) {\n      case \"camera opened\":\n        return\n      case \"picture taken\":\n        return <div>\n                 <button type=\"button\" onClick={this.confirmPicture}>Confirm Picture</button>\n                 <button type=\"button\" onClick={this.getVideo}>Try Again</button>\n               </div>\n    }\n  }\n  getVideo() {\n    this.video = document.createElement(\"video\");\n    this.setState({canvas_element : this.video})\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false })\n      .then(localMediaStream => {\n        this.video.srcObject = localMediaStream;\n        this.video.play();\n      })\n      .catch(err => {\n        console.error(`Error with getting media:`, err);\n      });\n    this.setState({buttons : <button type=\"button\" onClick={this.getPicture}>Take Picture</button>})\n  }\n  getPicture() {\n    this.video.pause();\n    this.canvas = document.createElement(\"canvas\");\n    const width = this.video.videoWidth;\n    const height = this.video.videoHeight;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.left = this.video.offsetLeft + \"px\";\n    this.canvas.style.top = this.video.offsetTop + \"px\";\n    var ctx = this.canvas.getContext('2d');\n    ctx.drawImage(this.video, 0, 0, width, height);\n    this.setState({picture_status : \"picture taken\"});\n  }\n  confirmPicture() {\n    this.video.srcObject.getTracks()[0].stop();\n    const dataURL = this.canvas.toDataURL('image/jpeg');\n    this.setState({picture : dataURL});\n  }\n  render() {\n    return(\n      <div>\n        <canvas class='picture'>{this.state.canvas_element}</canvas>\n        <p></p>\n        {this.state.buttons}\n      </div>\n    );\n  }\n}\n\n/*\nclass AssignLocation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.client = Stitch.initializeDefaultAppClient(\"resp-nqkab\");\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    this.db = mongodb.db(\"sample_disaster\");\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .catch(console.error);\n  }\n\n  addFound(event) {\n    event.preventDefault();\n    this.db\n      .collection(\"found\")\n      .insertOne({\n        owner_id: this.client.auth.user.id,\n        first: this.state.info.first,\n        last: this.state.info.last,\n        mi: this.state.info.mi,\n        dob: this.state.info.dob,\n        sex: this.state.info.sex,\n        height: this.state.info.height,\n        weight: this.state.info.weight,\n        description: this.state.info.description,\n        picture: this.state.info.picture\n      })\n      .then(this.displayFound)\n      .catch(console.error);\n  }\n\n  render() {\n    return(\n      <h3>Assign Location</h3>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}