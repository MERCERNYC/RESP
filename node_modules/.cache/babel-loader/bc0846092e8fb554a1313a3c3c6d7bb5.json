{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/PersonFound.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Card, CardImg, CardBody, CardText } from 'reactstrap';\nimport AssignLocation from './AssignLocation';\nimport { db } from './../stitch/database';\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\n\nvar mongodb = require('mongodb');\n\nexport function SearchToCard(props) {\n  const cardAttributes = [\"Name: \".concat(props.person.first, \" \").concat(props.person.last), \"Sex: \".concat(props.person.sex), (props.person.age_min || props.person.age_max) && \"Age: \".concat(props.person.age_min, \"-\").concat(props.person.age_max, \" yrs\"), (props.person.height_min || props.person.height_max) && \"Height: \".concat(props.person.height_min, \"-\").concat(props.person.height_max, \" cm\"), (props.person.weight_min || props.person.weight_max) && \"Weight: \".concat(props.person.weight_min, \"-\").concat(props.person.weight_max, \" kg\"), props.person.description && \"Description : \".concat(props.person.description), props.person.looked_for_by && \"Looked for By: \".concat(props.person.looked_for_by)];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: () => props.cardSelect(props.person),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"320\",\n    height: \"240\",\n    src: props.person.picture,\n    alt: \"No picture available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, cardAttributes.map(attribute => React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, attribute)))));\n}\nexport function PersonToCard(props) {\n  const cardAttributes = [\"Name: \".concat(props.person.first, \" \").concat(props.person.last), \"Sex: \".concat(props.person.sex), props.person.dob && \"Date of Birth: \".concat(props.person.dob), props.person.height && \"Height: \".concat(props.person.height, \" cm\"), props.person.weight && \"Weight: \".concat(props.person.weight, \" kg\"), props.person.description && \"Description : \".concat(props.person.description), props.person.campsite && \"Currently assigned to : Campsite \".concat(props.person.campsite)];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: () => props.cardSelect(props.person),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"320\",\n    height: \"240\",\n    src: props.person.picture,\n    alt: \"No picture available\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, cardAttributes.map(attribute => React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, attribute)))));\n}\nexport class DisplayFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state);\n    this.toNext = false;\n    this.cardSelect = this.cardSelect.bind(this);\n    this.reunite = this.reunite.bind(this);\n    this.noMatch = this.noMatch.bind(this);\n  }\n\n  cardSelect(person) {\n    console.log(person);\n    /*\n    this.looked_for_by = person.looked_for_by;\n    this.looked_for_by_id = person.looked_for_by_id;\n    this.id_to_delete = person._id;\n    this.relation = person.relation;\n    */\n  }\n\n  async reunite() {\n    const searcher = await db.collection('found').findOne({\n      _id: mongodb.ObjectId(this.looked_for_by_id)\n    }, {\n      campsite: true,\n      picture: true\n    }).catch(err => console.error(\"Failed to find documents: \".concat(err)));\n    this.campsite = searcher.campsite;\n    this.picture = searcher.picture;\n    this.info = _objectSpread({}, this.state, {\n      reunite: true,\n      looked_for_by: this.looked_for_by,\n      relation: this.relation,\n      id_to_delete: this.id_to_delete,\n      looked_for_campsite: searcher.campsite,\n      looked_for_picture: searcher.picture\n    });\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  noMatch() {\n    this.info = this.state;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  render() {\n    const message = this.state.found.length > 1 ? \"\".concat(this.state.found.length, \" potential matches found!\") : '1 Potential Match Found!';\n\n    if (this.toNext) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: \"\".concat(this.props.match.path, \"/assign-location\"),\n          state: this.info\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state.found.map(person => React.createElement(SearchToCard, {\n      person: person,\n      cardSelect: this.cardSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \"Does the checked-in person match the selected profile?\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.reunite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(\"button\", {\n      onClick: this.noMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"No\"));\n  }\n\n}\n\nconst PersonFound = ({\n  match\n}) => React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: DisplayFound,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/assign-location\"),\n  component: AssignLocation,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}));\n\nexport default PersonFound;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/PersonFound.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","Card","CardImg","CardBody","CardText","AssignLocation","db","Stitch","mongodb","require","SearchToCard","props","cardAttributes","person","first","last","sex","age_min","age_max","height_min","height_max","weight_min","weight_max","description","looked_for_by","cardSelect","picture","map","attribute","PersonToCard","dob","height","weight","campsite","DisplayFound","constructor","state","location","toNext","bind","reunite","noMatch","console","log","searcher","collection","findOne","_id","ObjectId","looked_for_by_id","catch","err","error","info","relation","id_to_delete","looked_for_campsite","looked_for_picture","setState","render","message","found","length","pathname","match","path","PersonFound"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport {Card, CardImg, CardBody, CardText} from 'reactstrap';\nimport AssignLocation from './AssignLocation';\nimport { db } from './../stitch/database';\nimport { Stitch } from \"mongodb-stitch-browser-sdk\";\nvar mongodb = require('mongodb');\n\nexport function SearchToCard(props) {\n  const cardAttributes = [`Name: ${props.person.first} ${props.person.last}`,\n                          `Sex: ${props.person.sex}`,\n                          (props.person.age_min || props.person.age_max) && `Age: ${props.person.age_min}-${props.person.age_max} yrs`,\n                          (props.person.height_min || props.person.height_max) && `Height: ${props.person.height_min}-${props.person.height_max} cm`,\n                          (props.person.weight_min || props.person.weight_max) && `Weight: ${props.person.weight_min}-${props.person.weight_max} kg`,\n                          props.person.description && `Description : ${props.person.description}`,\n                          props.person.looked_for_by && `Looked for By: ${props.person.looked_for_by}`];\n  return (\n    <div>\n      <Card onClick={() => props.cardSelect(props.person)}>\n        <CardImg width=\"320\" height=\"240\" src={props.person.picture} alt=\"No picture available\"/>\n        <CardBody>\n          {cardAttributes.map(attribute => <CardText>{attribute}</CardText>)}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport function PersonToCard(props) {\n  const cardAttributes = [`Name: ${props.person.first} ${props.person.last}`,\n                          `Sex: ${props.person.sex}`,\n                          props.person.dob && `Date of Birth: ${props.person.dob}`,\n                          props.person.height && `Height: ${props.person.height} cm`,\n                          props.person.weight && `Weight: ${props.person.weight} kg`,\n                          props.person.description && `Description : ${props.person.description}`,\n                          props.person.campsite && `Currently assigned to : Campsite ${props.person.campsite}`];\n  return (\n    <div>\n      <Card onClick={() => props.cardSelect(props.person)}>\n        <CardImg width=\"320\" height=\"240\" src={props.person.picture} alt=\"No picture available\"/>\n        <CardBody>\n          {cardAttributes.map(attribute => <CardText>{attribute}</CardText>)}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport class DisplayFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state};\n    this.toNext = false;\n    this.cardSelect = this.cardSelect.bind(this);\n    this.reunite = this.reunite.bind(this);\n    this.noMatch = this.noMatch.bind(this);\n  }\n  cardSelect(person) {\n    console.log(person);\n    /*\n    this.looked_for_by = person.looked_for_by;\n    this.looked_for_by_id = person.looked_for_by_id;\n    this.id_to_delete = person._id;\n    this.relation = person.relation;\n    */\n  }\n  async reunite() {\n    const searcher = await db\n      .collection('found')\n      .findOne({_id : mongodb.ObjectId(this.looked_for_by_id)}, {campsite : true, picture: true})\n      .catch(err => console.error(`Failed to find documents: ${err}`));\n    this.campsite = searcher.campsite;\n    this.picture = searcher.picture;\n    this.info = {...this.state,\n                 reunite : true,\n                 looked_for_by: this.looked_for_by,\n                 relation: this.relation,\n                 id_to_delete: this.id_to_delete,\n                 looked_for_campsite: searcher.campsite,\n                 looked_for_picture: searcher.picture};\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  noMatch() {\n    this.info = this.state;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  render() {\n    const message = this.state.found.length > 1 ? `${this.state.found.length} potential matches found!`\n                                                : '1 Potential Match Found!';\n    if(this.toNext) {\n      return <Redirect push to={{pathname: `${this.props.match.path}/assign-location`, state : this.info}}/>;\n    }\n    return(\n      <div>\n        <h3>{message}</h3>\n        <p></p>\n        {this.state.found.map((person) => <SearchToCard person={person} cardSelect={this.cardSelect} />)}\n        <p></p>\n        Does the checked-in person match the selected profile?\n        <p></p>\n        <button onClick={this.reunite}>Yes</button><button onClick={this.noMatch}>No</button>\n      </div>\n    );\n  }\n}\n\nconst PersonFound = ({match}) => (\n      <Router>\n        <Route exact path={`${match.path}`} component={DisplayFound} />\n        <Route path={`${match.path}/assign-location`} component={AssignLocation} />\n      </Router>\n    );\n\nexport default PersonFound;\n"]},"metadata":{},"sourceType":"module"}