{"ast":null,"code":"import _objectSpread from \"/home/abiery/Projects/RESP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/abiery/Projects/RESP/src/components/AssignLocation.js\";\nimport React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { personToCard } from './PersonFound';\nimport Camera from './Camera';\nimport FinishCheckIn from './FinishCheckIn';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, Field } from 'react-final-form';\nimport campsites from './campsites.json';\n\nfunction campsiteToButton(campsite) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"campsite\",\n    component: \"input\",\n    type: \"radio\",\n    value: campsite.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), ' ', \"Campsite \", campsite.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nclass AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.props.location.state);\n    this.modal = false;\n    this.toNext = false;\n    this.addFound = this.addFound.bind(this);\n  }\n\n  componentDidMount() {\n    this.person = _objectSpread({}, this.state);\n  }\n\n  addFound(person) {\n    db.collection(\"found\").insertOne(person).catch(console.error);\n    alert('Check-in Successful! Redirecting home');\n    this.nextPage = React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n    this.toNext = true;\n    this.setState(this.state);\n  }\n\n  render() {\n    const onSubmit = values => {\n      this.person = _objectSpread({}, this.person, {\n        campsite: values.campsite\n      });\n      delete this.person.found;\n      toggle();\n    };\n\n    const toggle = () => {\n      this.modal = !this.modal;\n      this.setState(this.state);\n    };\n\n    if (this.state.toNext) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: \"\".concat(this.props.match.url, \"/finish\"),\n          state: _objectSpread({}, this.person)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Assign Location\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: onSubmit,\n      render: ({\n        handleSubmit,\n        form,\n        submitting,\n        pristine,\n        values\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, campsites.campsites.map(campsiteToButton)), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: submitting || pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: form.reset,\n        disabled: submitting || pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Reset\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      isOpen: this.modal,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Is this information correct?\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, personToCard(_objectSpread({}, this.person))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"footer\")));\n  }\n\n}\n\nconst AssignLocation = ({\n  match\n}) => React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"\".concat(match.path),\n  component: AssignCamp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"\".concat(match.path, \"/finish\"),\n  component: FinishCheckIn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}));\n\nexport default AssignLocation;","map":{"version":3,"sources":["/home/abiery/Projects/RESP/src/components/AssignLocation.js"],"names":["React","Component","stitchClient","db","personToCard","Camera","FinishCheckIn","BrowserRouter","Router","Route","Redirect","Switch","Modal","ModalHeader","ModalBody","ModalFooter","Form","Field","campsites","campsiteToButton","campsite","name","AssignCamp","constructor","props","state","location","modal","toNext","addFound","bind","componentDidMount","person","collection","insertOne","catch","console","error","alert","nextPage","setState","render","onSubmit","values","found","toggle","pathname","match","url","handleSubmit","form","submitting","pristine","map","reset","AssignLocation","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { stitchClient, db } from '../stitch/database';\nimport { personToCard } from './PersonFound';\nimport Camera from './Camera';\nimport FinishCheckIn from './FinishCheckIn';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Form, Field } from 'react-final-form';\nimport campsites from './campsites.json'\n\nfunction campsiteToButton(campsite) {\n  return (<div>\n            <label>\n            <Field\n              name=\"campsite\"\n              component=\"input\"\n              type=\"radio\"\n              value={campsite.name}\n              />{' '}\n              Campsite {campsite.name}\n            </label>\n            <p></p>\n          </div>);\n}\n\nclass AssignCamp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props.location.state};\n    this.modal = false;\n    this.toNext = false;\n    this.addFound = this.addFound.bind(this);\n  }\n  componentDidMount() {\n    this.person = {...this.state};\n  }\n\n  addFound(person) {\n    db\n      .collection(\"found\")\n      .insertOne(person)\n      .catch(console.error);\n    alert('Check-in Successful! Redirecting home');\n    this.nextPage = <Redirect push to='/'/>;\n    this.toNext = true;\n    this.setState(this.state);\n  }\n  render() {\n    const onSubmit = (values) => {\n      this.person = {...this.person, campsite : values.campsite}\n      delete this.person.found;\n      toggle();\n    };\n    const toggle = () => {\n      this.modal = !this.modal;\n      this.setState(this.state);\n    };\n    if(this.state.toNext) {\n      return <Redirect push to={{pathname: `${this.props.match.url}/finish`, state: {...this.person}}}/>\n    }\n    return(\n      <div>\n      <h3>Assign Location</h3>\n      <div>\n      <Form\n        onSubmit={onSubmit}\n        render={({ handleSubmit, form, submitting, pristine, values }) => (\n        <form onSubmit={handleSubmit}>\n          <div>\n            {campsites.campsites.map(campsiteToButton)}\n          </div>\n          <div className=\"buttons\">\n              <button type=\"submit\" disabled={submitting || pristine}>\n                Search\n              </button>\n              <button\n                type=\"button\"\n                onClick={form.reset}\n                disabled={submitting || pristine}>\n                Reset\n              </button>\n            </div>\n        </form>\n        )}/>\n      </div>\n        <Modal isOpen={this.modal} toggle={toggle}>\n          <ModalHeader>Is this information correct?</ModalHeader>\n          <ModalBody>{personToCard({...this.person})}</ModalBody>\n          <ModalFooter>footer</ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst AssignLocation = ({match}) => (\n      <Router>\n        <Route exact path={`${match.path}`} component={AssignCamp} />\n        <Route path={`${match.path}/finish`} component={FinishCheckIn} />\n      </Router>\n    );\n\nexport default AssignLocation;\n"]},"metadata":{},"sourceType":"module"}